name: Build check and release if on main

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: thumbv6m-none-eabi

      - name: Install system dependencies
        run: sudo apt-get update && sudo apt-get install -y libudev-dev
    
        # Test build examples, does not release
      - name: Test build examples (Wihtout releaseing)
        run: |
          cargo build --release --example hello_world --target thumbv6m-none-eabi
          cargo build --release --example menu --target thumbv6m-none-eabi
          cargo build --release --example button_test_async --target thumbv6m-none-eabi
          cargo build --release --example button_test_poll --target thumbv6m-none-eabi --features button-poll --no-default-features
          cargo build --release --example snake --target thumbv6m-none-eabi
          cargo build --release --example bricks --target thumbv6m-none-eabi

  release:
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: thumbv6m-none-eabi

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config libudev-dev
 

      - name: Install elf2uf2-rs
        run: cargo install elf2uf2-rs

        # Add final release examples here
      - name: Build examples for release
        run: |
          cargo build --release --example hello_world --target thumbv6m-none-eabi
          cargo build --release --example menu --target thumbv6m-none-eabi
          cargo build --release --example button_test_async --target thumbv6m-none-eabi
          cargo build --release --example button_test_poll --target thumbv6m-none-eabi --features button-poll --no-default-features
          cargo build --release --example snake --target thumbv6m-none-eabi
          cargo build --release --example bricks --target thumbv6m-none-eabi

      - name: Delete old release and tag (latest)
        run: |
          tag="latest"
          gh release delete "$tag" --yes || true
          git push origin :refs/tags/$tag || true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Recreate latest tag and release
        run: |
          tag="latest"
          git tag -f "$tag"
          git push origin "$tag" --force
          gh release create "$tag" --title "Latest Build" --notes "Automated rebuild at $GITHUB_SHA"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Convert ELF to UF2
        run: |
          mkdir -p artifacts
          for f in target/thumbv6m-none-eabi/release/examples/*; do
            [ -f "$f" ] || continue
            filename=$(basename "$f")
            if [[ "$filename" == *-* || "$filename" == *.* ]]; then
              echo "Skipping $filename"
              continue
            fi
            elf2uf2-rs "$f" "artifacts/${filename}.uf2"
          done

      - name: Upload UF2 artifacts to GitHub Release
        run: |
          for f in artifacts/*.uf2; do
            gh release upload latest "$f" --clobber
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Generate Documentation
        run: |
          cargo doc --no-deps --target thumbv6m-none-eabi
          mkdir -p docs
          cp -r target/thumbv6m-none-eabi/doc/* docs/

      - name: Deploy Documentation
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: docs # The directory where rustdoc outputs files
